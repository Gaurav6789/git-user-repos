{"version":3,"sources":["Header.js","Users.js","GithubPage.js","reportWebVitals.js","index.js"],"names":["Header","props","state","className","src","PureComponent","Users","getUserRepo","repoUrl","setState","showUserRepo","fetch","method","then","response","json","repoData","userData","limit","search","this","Authorization","userNameFilter","filter","user","login","indexOf","type","placeholder","value","onChange","e","target","map","onClick","repos_url","toUpperCase","substring","id","href","window","location","repos","index","full_name","GithubPage","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAqBeA,E,kDAlBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,GAHE,E,0CAQnB,WACI,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKA,UAAU,aAAaC,IAAI,0EADpC,qB,GAXSC,iBC+ENC,E,kDA9EX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IAsBVM,YAAc,SAACC,GACX,EAAKC,SAAS,CAACC,cAAc,EAAKR,MAAMQ,eACpC,EAAKR,MAAMQ,cACXC,MAAMH,EAAQ,CACVI,OAAO,QAEVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKL,SAAS,CAACO,SAAWF,QA3BhD,EAAKZ,MAAQ,CACTe,SAAW,GACXC,MAAQ,GACRR,cAAe,EACfM,SAAU,GACVG,OAAS,IARE,E,qDAanB,WAAoB,IAAD,OACfR,MAAM,wCAAD,OAAyCS,KAAKlB,MAAMgB,OAAQ,CAC7DN,OAAO,MACPS,cAAe,yCACf,sBAAuB,uCAE1BR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKL,SAAS,CAACQ,SAASH,S,oBAc9C,WAAU,IAAD,OACDQ,EAAiBF,KAAKlB,MAAMe,SAASM,QAAO,SAACC,GAAQ,OAAiD,GAA1CA,EAAKC,MAAMC,QAAQ,EAAKxB,MAAMiB,WAC9F,OACI,sBAAKhB,UAAU,YAAf,WAEMiB,KAAKlB,MAAMQ,cACZ,sBAAKP,UAAU,eAAf,6BAEI,uBACAwB,KAAK,OACLC,YAAa,cACbzB,UAAU,qBACV0B,MAAOT,KAAKlB,MAAMiB,OAClBW,SAAU,SAACC,GAAD,OAAK,EAAKtB,SAAS,CAACU,OAASY,EAAEC,OAAOH,eAInDT,KAAKlB,MAAMQ,cAAgBY,EAAeW,KAAI,SAACT,GAAD,OAChD,qBACIrB,UAAU,WACV+B,QAAS,kBAAM,EAAK3B,YAAYiB,EAAKW,YAFzC,SAKKX,EAAKC,MAAM,GAAGW,cAAgBZ,EAAKC,MAAMY,UAAU,IAF7Cb,EAAKc,OAMflB,KAAKlB,MAAMQ,cACR,gCACI,sBAAKP,UAAU,eAAf,UACI,mBAAGA,UAAU,cAAcoC,KAAMC,OAAOC,SAASF,KAAjD,mBADJ,oBAICnB,KAAKlB,MAAMc,UAAYI,KAAKlB,MAAMc,SAASiB,KAAI,SAACS,EAAOC,GAAR,OAC5C,qBAAKxC,UAAU,WAAf,SACK,iBAAOwC,EAAM,EAAb,MAAoBD,EAAME,yB,GAtEvCvC,iBCyBLwC,E,kDAnBb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0CAQnB,WACE,OACE,eAAC,IAAM4C,SAAP,WACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAbmBzC,iBCKV0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.abc70dbc.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\n\nclass Header extends PureComponent {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className='header-page'>\n                <img className='icon-image' src='https://github.githubassets.com/images/modules/logos_page/Octocat.png'/>\n                Github Page\n            </div>\n        )\n    }\n}\n\nexport default Header","import React, { PureComponent } from 'react'\n\nclass Users extends PureComponent {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            userData : [],\n            limit : 25,\n            showUserRepo : false,\n            repoData :[],\n            search : '',\n            // offset:0,\n        }\n    }\n\n    componentDidMount(){\n        fetch(`https://api.github.com/users?per_page${this.state.limit}`,{\n            method:'GET',\n            Authorization: \"Basic Z2F1cmF2Njc4OTpHYXVyYXZANjc4OQ==\",\n            'X-GitHub-Request-Id': '9CBE:0CC4:171F6F3:278E961:6083A6F6',\n        })\n        .then(response => response.json())\n        .then(response => this.setState({userData:response}))\n    }\n\n    getUserRepo = (repoUrl) =>{\n        this.setState({showUserRepo:!this.state.showUserRepo});\n        if(!this.state.showUserRepo){\n            fetch(repoUrl,{\n                method:'GET',\n            })\n            .then(response => response.json())\n            .then(response => this.setState({repoData : response}))\n        }\n    }\n\n    render() {\n        let userNameFilter = this.state.userData.filter((user)=>{return user.login.indexOf(this.state.search) != -1})\n        return (\n            <div className='user-page'>\n                {/* Git User section */}\n                {!this.state.showUserRepo &&\n                 <div className='page-heading'>\n                     Git Users List : \n                     <input \n                     type=\"text\" \n                     placeholder ='Search User'\n                     className='input-search-field'\n                     value={this.state.search} \n                     onChange={(e)=>this.setState({search : e.target.value})}\n                     />\n                 </div>}\n\n                {!this.state.showUserRepo && userNameFilter.map((user) =>\n                <div \n                    className=\"userName\" \n                    onClick={() => this.getUserRepo(user.repos_url)}\n                    key = {user.id}\n                >\n                    {user.login[0].toUpperCase() + user.login.substring(1) }\n                </div>)}\n\n                {/* Git Repo Section */}\n                {this.state.showUserRepo && \n                    <div>\n                        <div className='page-heading'>\n                            <a className='back-button' href={window.location.href}>Back </a>\n                            Repositories :\n                        </div> \n                        {this.state.repoData && this.state.repoData.map((repos, index)=>\n                            <div className=\"repoName\">\n                                {`--> ${index+1}. `+ repos.full_name}\n                            </div>\n               )}</div>\n            }\n            </div>\n        )\n    }\n}\n\nexport default Users","import React, { PureComponent } from 'react'\nimport './App.css'\nimport reactDom from 'react-dom';\nimport Header from './Header';\nimport Users from './Users';\n\n\nclass GithubPage extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      \n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <Header/>\n      <Users/>\n      </React.Fragment>\n      \n    )\n  }\n}\n\nexport default GithubPage","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './GithubPage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}